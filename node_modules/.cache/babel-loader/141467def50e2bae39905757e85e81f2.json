{"ast":null,"code":"var _jsxFileName = \"/home/piyushsi/Desktop/dfc/src/Components/AddYaml/index.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Yaml from \"yamljs\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: theme.spacing(22)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"15rem\",\n    borderRadius: \"0%\",\n    border: \"1px solid lightgrey\"\n  },\n  fullpaper: {\n    height: \"30rem\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar\n  },\n  textarea: {\n    width: \"100%\"\n  }\n}));\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n  const [data, setData] = React.useState({\n    payload: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    props.data(Yaml.parse(value));\n    localStorage.setItem(\"data\", value == \"\" ? localStorage.data : value);\n  };\n\n  const handleClick = () => {\n    var e = {\n      target: {}\n    };\n    e.target = {\n      name: \"payload\",\n      value: localStorage.data\n    };\n    handleChange(e);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n    name: \"payload\",\n    onChange: handleChange,\n    className: classes.textarea,\n    \"aria-label\": \"minimum height\",\n    rowsMin: 12,\n    placeholder: \"Input YAML format in Title Case\",\n    value: data.payload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), data.payload == \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    clickable: true,\n    avatar: /*#__PURE__*/React.createElement(ReplayIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }),\n    label: \"undo\",\n    onClick: handleClick,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })) : \"\")));\n}","map":{"version":3,"sources":["/home/piyushsi/Desktop/dfc/src/Components/AddYaml/index.js"],"names":["React","makeStyles","Grid","TextareaAutosize","Yaml","ReplayIcon","Avatar","Chip","useStyles","theme","root","flexGrow","padding","spacing","paddingLeft","paper","textAlign","color","palette","text","secondary","height","borderRadius","border","fullpaper","toolbar","display","alignItems","justifyContent","mixins","textarea","width","FullWidthGrid","props","classes","data","setData","useState","payload","handleChange","e","name","value","target","prevState","parse","localStorage","setItem","handleClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Yaml from \"yamljs\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: theme.spacing(22),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"15rem\",\n    borderRadius: \"0%\",\n    border: \"1px solid lightgrey\",\n  },\n  fullpaper: {\n    height: \"30rem\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  textarea: {\n    width: \"100%\",\n  },\n}));\n\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState({\n    payload: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n    props.data(Yaml.parse(value));\n    localStorage.setItem(\"data\", value == \"\" ? localStorage.data : value);\n  };\n\n  const handleClick = () => {\n    var e = { target: {} };\n    e.target = {\n      name: \"payload\",\n      value: localStorage.data,\n    };\n    handleChange(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      <Grid container>\n        <Grid item xs={10} sm={10}>\n          <TextareaAutosize\n            name=\"payload\"\n            onChange={handleChange}\n            className={classes.textarea}\n            aria-label=\"minimum height\"\n            rowsMin={12}\n            placeholder=\"Input YAML format in Title Case\"\n            value={data.payload}\n          />\n          {data.payload == \"\" ? (\n            <div>\n              <Chip\n                clickable\n                avatar={<ReplayIcon />}\n                label=\"undo\"\n                onClick={handleClick}\n                variant=\"outlined\"\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}