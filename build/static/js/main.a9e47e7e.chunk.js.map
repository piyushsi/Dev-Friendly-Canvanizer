{"version":3,"sources":["Components/Common/Header.js","Components/LeanCanvas/index.js","Components/AddYaml/index.js","Components/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","MiniDrawer","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","to","style","textDecoration","Drawer","paper","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","flexGrow","paddingLeft","textAlign","palette","text","secondary","height","borderRadius","border","fullpaper","head","fontSize","textTransform","node","marginTop","FullWidthGrid","data","child","map","value","Object","keys","values","el","Grid","container","item","xs","sm","Paper","background","textarea","payload","setData","handleChange","e","target","name","prevState","Yaml","parse","localStorage","setItem","TextareaAutosize","onChange","rowsMin","placeholder","Chip","clickable","avatar","label","SimpleContainer","Fragment","App","isYaml","setIsYaml","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a9e47e7e.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ViewCompactIcon from \"@material-ui/icons/ViewCompact\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\n              {\" \"}\n              Dev Friendly Canvanizer\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/add\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button key=\"Add YAML\">\n              <ListItemIcon>\n                <PostAddIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Add YAML\" />\n            </ListItem>\n          </Link>\n        </List>\n        <List>\n          <Link to=\"/model\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button key=\"Lean Canvas\">\n              <ListItemIcon>\n                <ViewCompactIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Lean Canvas\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n\n        <List>\n          <Link to=\"/live\" style={{ textDecoration: \"none\", color: \"black\" }}>\n            <ListItem button key=\"Live Lean Canvas\">\n              <ListItemIcon>\n                <PostAddIcon />\n                <ViewCompactIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Live View\" />\n            </ListItem>\n          </Link>\n        </List>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport EuroIcon from \"@material-ui/icons/Euro\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: theme.spacing(22),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"15rem\",\n    borderRadius: \"0%\",\n    border: \"1px solid lightgrey\",\n    textAlign: \"left\",\n  },\n  fullpaper: {\n    height: \"30rem\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  head: {\n    color: \"white\",\n    fontSize: \"1rem\",\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n  },\n  node: {\n    marginTop: \"5rem\",\n  },\n}));\n\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n\n  const data = props.data;\n\n  const child = (data) => {\n    return data && data[0] ? (\n      data.map((value) => {\n        return !value || typeof value === \"string\" ? (\n          <div>- {value ? value : \"\"}</div>\n        ) : (\n          <>\n            <div className={classes.head + \" \" + classes.node}>\n              {Object.keys(value)[0]}\n            </div>\n            {Object.values(value)[0].map((el) => (\n              <div>- {el}</div>\n            ))}\n          </>\n        );\n      })\n    ) : (\n      <div>N/A</div>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      {data ? (\n        <Grid container>\n          <Grid item xs={12} sm={2}>\n            <Paper\n              className={classes.paper + \" \" + classes.fullpaper}\n              style={{ background: \"#8C0FB5\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                {\" \"}\n                <HttpsIcon /><br/>\n                Problem\n              </div>\n              {child(data[\"Problem\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#FF9A00\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <LockOpenIcon /><br/>\n                Solution\n              </div>\n              {child(data[\"Solution\"])}\n            </Paper>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#FC6B28\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <RedeemIcon /><br/>\n                Key Metrics\n              </div>\n              {child(data[\"Key Metrics\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Paper\n              className={classes.paper + \" \" + classes.fullpaper}\n              style={{ background: \"#00AB45\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <EqualizerIcon /><br/>\n                Unique Value Proposition\n              </div>\n              {child(data[\"Unique Value Proposition\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#7FD02D\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <StarsIcon /><br/>\n                Unfair Advantage\n              </div>\n              {child(data[\"Unfair Advantage\"])}\n            </Paper>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#00B9A9\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <OpenWithIcon /><br/>\n                Channels\n              </div>\n              {child(data[\"Channels\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Paper\n              className={classes.paper + \" \" + classes.fullpaper}\n              style={{ background: \"#55D1E5\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <PersonIcon /><br/>\n                Customer Segment\n              </div>\n              {child(data[\"Customer Segment\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#2151CD\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <LocalOfferIcon /><br/>\n                Cost Structure\n              </div>\n              {child(data[\"Cost Structure\"])}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <Paper\n              className={classes.paper}\n              style={{ background: \"#00728C\", color: \"#fff\" }}\n            >\n              <div className={classes.head}>\n                <EuroIcon /><br/>\n                Revenue Streams\n              </div>\n              {child(data[\"Revenue Streams\"])}\n            </Paper>\n          </Grid>\n        </Grid>\n      ) : (\n        <Grid item xs={12} sm={2}>\n          YAML Not Found\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Yaml from \"yamljs\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: theme.spacing(22),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"15rem\",\n    borderRadius: \"0%\",\n    border: \"1px solid lightgrey\",\n  },\n  fullpaper: {\n    height: \"30rem\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  textarea: {\n    width: \"100%\",\n  },\n}));\n\nexport default function FullWidthGrid(props) {\n  const classes = useStyles();\n\n  const [data, setData] = React.useState({\n    payload: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n    props.data(Yaml.parse(value));\n    localStorage.setItem(\"data\", value == \"\" ? localStorage.data : value);\n  };\n\n  const handleClick = () => {\n    var e = { target: {} };\n    e.target = {\n      name: \"payload\",\n      value: localStorage.data,\n    };\n    handleChange(e);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.toolbar} />\n      <Grid container>\n        <Grid item xs={10} sm={10}>\n          <TextareaAutosize\n            name=\"payload\"\n            onChange={handleChange}\n            className={classes.textarea}\n            aria-label=\"minimum height\"\n            rowsMin={12}\n            placeholder=\"Input YAML format in Title Case\"\n            value={data.payload}\n          />\n          {data.payload == \"\" ? (\n            <div>\n              <Chip\n                clickable\n                avatar={<ReplayIcon />}\n                label=\"undo\"\n                onClick={handleClick}\n                variant=\"outlined\"\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SimpleContainer() {\n  return (\n    <React.Fragment>\n      <section className=\"cover\">\n        <div className=\"content\">\n          <h2 className=\"heading\">\n             Developers can<br />\n             generate a Lean Canvas{\" \"}\n          </h2>\n          <p>for their business  using  Dev Friendly Canvanizer.</p>\n          <div className=\"cta-btn\">\n            <Link to=\"/add\" style={{ textDecoration: \"none\", color: \"white\" }}>\n              Get Started\n            </Link>\n          </div>\n          <p className=\"highlight\">© Made in the ⛰️ by Piyush Sinha.</p>\n          <div className=\"card\">\n            <h2>Dev Friendly Canvanizer</h2>\n            <p>\n              A web interface that can accept the content for a Lean\n              Canvas as YAML.\n            </p>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Components/Common/Header\";\nimport LeanCanvas from \"./Components/LeanCanvas\";\nimport AddYaml from \"./Components/AddYaml/index\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./Components/HomePage.js\"\nimport './App.css'\n\nfunction App() {\n  const [isYaml, setIsYaml] = React.useState(false);\n  return (\n    <div>\n      <BrowserRouter>\n        <Header data={isYaml} />\n        <Switch>\n        <Route\n            exact\n            path=\"/\"\n            render={(props) => <HomePage {...props} />}\n          />\n          <Route\n            exact\n            path=\"/model\"\n            render={(props) => <LeanCanvas {...props} data={isYaml} />}\n          />\n          <Route\n            exact\n            path=\"/add\"\n            render={(props) => <AddYaml {...props} data={setIsYaml} />}\n          />\n          <Route\n            exact\n            path=\"/live\"\n            render={(props) => (\n              <>\n                <AddYaml {...props} data={setIsYaml} />\n                <LeanCanvas {...props} data={isYaml} />\n              </>\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}